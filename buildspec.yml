# version: 0.2

# phases:
#   install:
#     commands:
#       - npm install
#   build:
#     commands:
#       - npm run build
# artifacts:
#   files:
#     - '**/*'


version: 0.2
phases: 
  install:
    runtime-versions:
        docker: 18     
    commands: 
      - npm install
      - npm run build
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build: 
    commands: 
    - echo Logging in to Amazon ECR.... 
    - aws --version
    # update the following line with your own region
    - $(aws ecr get-login --no-include-email --region eu-west-1)
    # - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
    - IMAGE_TAG=awspractice/web-api-gateway:latest
    # - REPOSITORY_URI=123456789.dkr.ecr.eu-west-1.amazonaws.com/sample/sampleapp 
  build: 
    commands: 
    - echo Build started on `date` 
    - echo Building the Docker image... 
    # update the following line with the name of your own ECR repository
    - printf '{"ImageURI":"%s"}' $IMAGE_REPO_NAME:$IMAGE_TAG > imageDetail.json
    - docker build -t awspractice/web-api-gateway .
    # update the following line with the URI of your own ECR repository (view the Push Commands in the console)
    # - docker tag web-api-gateway:latest web-api-gateway:$IMAGE_TAG 
  post_build: 
    commands: 
    - echo Build completed on `date` 
    - echo pushing to repo
    - printf '{"ImageURI":"%s"}' $IMAGE_REPO_NAME:$IMAGE_TAG > imageDetail.json
    # update the following line with the URI of your own ECR repository
    - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG
    - docker push $IMAGE_REPO_NAME:$IMAGE_TAG
    # - docker push web-api-gateway:$IMAGE_TAG
    - echo Writing image definitions file... 
    #- printf '[{"ImageURI":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json
    - printf '{"ImageURI":"%s"}' $IMAGE_REPO_NAME:$IMAGE_TAG > imageDetail.json
artifacts:
  files:
    - imageDetail.json    